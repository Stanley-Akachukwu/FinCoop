@using AP.ChevronCoop.Entities.Deposits.CommonViews;
@using AP.ChevronCoop.Entities.Loans.LoanApplications;
@using ChevronCoop.Web.AppUI.BlazorServer.Pages.Accounts.DepositAccount.Drawals

@*<div class="grid grid-cols-1 gap-2  mb-4 w-full md:grid-cols-2 ">

    <div class="p-4 bg-white rounded-lg shadow sm:p-6 xl:p-4">
        <div class="flex flex-row items-center gap-x-3 py-4">

            @((MarkupString)@SvgHelpers.AvailableBalance)


            <div class="flex flex-col justify-start">
                <div class="text-gray-500 text-sm">Loan Balance</div>
                <div class="text-base font-bold">₦@LoanBalance.ToString("N2")</div>
            </div>
        </div>

    </div>

    <div class="p-4 bg-white rounded-lg shadow sm:p-6 xl:p-4">
        <div class="flex flex-row items-center gap-x-3 py-4">
            @((MarkupString)@SvgHelpers.LedgerBalance)

            <div class="flex flex-col justify-start">
                <div class="text-gray-500 text-sm">Loan Amount </div>
                <div class="text-base font-bold">₦@LoanAmount.ToString("N2")</div>
            </div>
        </div>

    </div>
    <div class="p-4 bg-white rounded-lg shadow sm:p-6 xl:p-4">
        <div class="flex flex-row items-center gap-x-3 py-4">
            @((MarkupString)@SvgHelpers.LedgerBalance)

            <div class="flex flex-col justify-start">
                <div class="text-gray-500 text-sm">Total Amount Repaid </div>
                <div class="text-base font-bold">₦@TotalAmountRepaid.ToString("N2")</div>
            </div>
        </div>

    </div>
    <div class="p-4 bg-white rounded-lg shadow sm:p-6 xl:p-4">
        <div class="flex flex-row items-center gap-x-3 py-4">
            @((MarkupString)@SvgHelpers.LedgerBalance)

            <div class="flex flex-col justify-start">
                <div class="text-gray-500 text-sm">Next Repayment Amount </div>
                <div class="text-base font-bold">₦@NextRepaymentAmount.ToString("N2")</div>
            </div>
        </div>

    </div>
</div>*@


<!-- Table -->
<div class="p-4 bg-white rounded-lg shadow sm:p-6 xl:p-8 dark:bg-gray-800">
    <!-- Card Title -->
    <div class="flex justify-between items-center mb-4">
        <div>
            <h3 class="mb-2 text-xl font-bold text-gray-900 dark:text-white">
                All Transactions Details
            </h3>
        </div>
        <div class="flex-shrink-0">
        </div>
    </div>
    <!-- Table -->
    <div class="flex flex-col mt-8">
        <div class="overflow-x-auto rounded-lg">
            <div class="inline-block min-w-full align-middle">
                <div class="overflow-hidden shadow sm:rounded-lg">

                    <div class="overflow-x-auto">
                        <SfGrid ID="gridCashAddition" TValue="LoanApplicationMasterView" EnablePersistence="false"
                                DataSource="_LoanApplicationMasterViewSrc"
                                AllowPaging="true" AllowFiltering="false" AllowSelection="false" EnableAltRow="false"
                                AllowResizing="false" ShowColumnChooser="true" ShowColumnMenu="true" Width="100%" Height="100%"
                                AllowExcelExport="true" AllowPdfExport="true" AllowTextWrap="true" AllowSorting="false"
                                AllowMultiSorting="false" AllowGrouping="false" AllowReordering="true" AllowRowDragAndDrop="false" Toolbar="@(new List<string>() { "ExcelExport","PdfExport" })">

                            <GridPageSettings PageCount="5" PageSize="20" PageSizes="new int[]{5,10,15,20,30,50}"></GridPageSettings>

                            <GridEvents TValue="LoanApplicationMasterView"></GridEvents>

                            <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false"
                                              ShowDeleteConfirmDialog="false" Mode="EditMode.Dialog"></GridEditSettings>

                            <GridColumns>
                                <GridColumn Field=@nameof(LoanApplicationMasterView.DateCreated) HeaderText="DATE" Type="ColumnType.DateTime" Format="dd/MMM/yyyy" AutoFit="true" Width="100"></GridColumn>
                                <GridColumn Field=@nameof(LoanApplicationMasterView.ApprovalId_ApprovalType) HeaderText="LOAN TRANSACTION TYPE" AutoFit="true" Width="100"></GridColumn>
                                <GridColumn Field=@nameof(LoanApplicationMasterView.LoanProductId_Name) HeaderText="NAME" AutoFit="false" Width="120"></GridColumn>
                                <GridColumn Field=@nameof(LoanApplicationMasterView.LoanProductId_LoanProductType) HeaderText="LOAN TYPE" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LoanApplicationMasterView.LoanProductId_TenureUnit) HeaderText="TENURE UNIT" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LoanApplicationMasterView.Principal) HeaderText="PRINCIPAL AMOUNT" Format="N2" Type="ColumnType.Number" AutoFit="true"></GridColumn>

                                <GridColumn HeaderText="STATUS" AutoFit="true" HeaderTextAlign="TextAlign.Right" TextAlign=TextAlign.Center Width="70">
                                    <Template>

                                        @{
                                            var row = (context as LoanApplicationMasterView);

                                            if (row.ApprovalId_Status == ApprovalStatus.INITIATED.ToString())
                                            {
                                                <span class="bg-purple-100 dark:bg-purple-200 text-purple-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-md">
                                                    @row.ApprovalId_Status
                                                </span>
                                            }
                                            else if (row.ApprovalId_Status == ApprovalStatus.PENDING_APPROVAL.ToString())
                                            {
                                                <span class="bg-purple-100 dark:bg-purple-200 text-purple-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-md">
                                                    @row.ApprovalId_Status
                                                </span>
                                            }
                                            else if (row.ApprovalId_Status == ApprovalStatus.APPROVED.ToString())
                                            {
                                                <span class="bg-green-100 dark:bg-green-200 text-green-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-md">
                                                    @row.ApprovalId_Status
                                                </span>
                                            }
                                            else if (row.ApprovalId_Status == ApprovalStatus.REJECTED.ToString())
                                            {
                                                <span class="bg-red-100 dark:bg-red-200 text-red-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-md">
                                                    @row.ApprovalId_Status
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="bg-purple-100 dark:bg-purple-200 text-purple-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-md">
                                                    @row.ApprovalId_Status
                                                </span>
                                            }
                                        }

                                    </Template>
                                </GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>


                </div>
            </div>
        </div>
    </div>

</div>

